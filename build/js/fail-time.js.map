{"version":3,"file":"fail-time.js","sources":["js/util.js","js/fail-time.js"],"sourcesContent":["// функция получения элементов из шаблона\r\nconst createElementFromTemplate = (template) => {\r\n  const fragment = document.createElement('div');\r\n  fragment.innerHTML = template;\r\n  return fragment;\r\n}\r\n// функция отрисовки шаблона на странице\r\nconst renderElement = (element) => {\r\n  const wraper = document.querySelector('.main');\r\n  wraper.innerHTML = '';\r\n  wraper.append(element);\r\n};\r\n\r\n\r\n// Функция подсчёта набранных баллов игрока\r\n// на вход принимает массив ответов пользователя answersArr и кол-во оставшихся нот remainingLifes\r\n// Функция на выходе отдаёт кол-во набранных очков\r\nconst playerScoresCounter = (answersArr, remainingLifes) => {\r\n  let playerScores = 0;\r\n  for (let i = 0; i < answersArr.length; i += 1) {\r\n    if (answersArr[i].answ === 'r') {\r\n      playerScores += 1;\r\n      if (answersArr[i].time < 30) {\r\n        playerScores += 1;\r\n      }\r\n    } else { playerScores -= 2; }\r\n  }\r\n  if (answersArr.length < 10) {\r\n    playerScores = -1;\r\n  }\r\n  return playerScores;\r\n};\r\n\r\n\r\n// Функция вывода результата игрока\r\n// на вход принимает массив результатов игр других игроков otherPlayersArr и\r\n// объект результата с кол-ом набранных баллов playerStatusObj.scores,\r\n// кол-вом оставшихся жизней playerStatusObj.lifes\r\n// и кол-вом оставшегося времени playerStatusObj.timeLeft\r\nconst showPlayerResult = (otherPlayersArr, playerStatusObj) => {\r\n  let result = '';\r\n  // сценарий проигрыша когда закончились жизни\r\n  if (playerStatusObj.lifes < 0) {\r\n    result = 'У вас закончились все попытки. Ничего, повезёт в следующий раз!';\r\n  } else if\r\n  // сценарий проигрыша когда закончилось время\r\n  (playerStatusObj.timeLeft <= 0) {\r\n    result = 'Время вышло! Вы не успели отгадать все мелодии';\r\n  } else {\r\n  // сценарий выигрыша\r\n  /* узнаем место игрока в таблице результатов */\r\n    otherPlayersArr.sort((a, b) => b - a);\r\n\r\n    let playerPosition = (otherPlayersArr.findIndex((item) => playerStatusObj.scores >= item)) + 1;\r\n    if (playerPosition === 0) {\r\n      playerPosition = otherPlayersArr.length + 1;\r\n    }\r\n    /* вычисление процента успеха игрока */\r\n    const playerSuccessPercent = ((otherPlayersArr.length - playerPosition) / otherPlayersArr.length) * 100;\r\n\r\n    result = `Вы заняли ${playerPosition} место из ${otherPlayersArr.length} игроков.\r\n    Это лучше, чем у ${playerSuccessPercent}% игроков,`;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport { createElementFromTemplate, renderElement, playerScoresCounter, showPlayerResult };\r\n","import { createElementFromTemplate } from './util';\r\n\r\n\r\nconst failTime = createElementFromTemplate(`<section class=\"result\">\r\n<div class=\"result__logo\"><img src=\"img/melody-logo.png\" alt=\"Угадай мелодию\" width=\"186\" height=\"83\"></div>\r\n<h2 class=\"result__title\">Увы и ах!</h2>\r\n<p class=\"result__total result__total--fail\">Время вышло! Вы не успели отгадать все мелодии</p>\r\n<button class=\"result__replay\" type=\"button\">Попробовать ещё раз</button>\r\n</section>`);\r\n\r\n//const returnBtn = document.querySelector('.result__replay');\r\n\r\n//returnBtn.addEventListener('click', welcomeScreen);\r\n\r\n\r\nexport default failTime;\r\n"],"names":[],"mappings":";;;EAAA;EACA,MAAM,yBAAyB,GAAG,CAAC,QAAQ,KAAK;EAChD,EAAE,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;EACjD,EAAE,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC;EAChC,EAAE,OAAO,QAAQ,CAAC;EAClB,CAAC;;ECFD,MAAM,QAAQ,GAAG,yBAAyB,CAAC,CAAC;;;;;UAKlC,CAAC,CAAC,CAAC;;;;;;;;"}